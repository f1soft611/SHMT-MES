<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SchedulerConfigDAO">

    <!-- 스케쥴러 설정 resultMap -->
    <resultMap id="schedulerConfigResultMap" type="egovframework.let.scheduler.domain.model.SchedulerConfig">
        <result property="schedulerId" column="scheduler_id"/>
        <result property="schedulerName" column="scheduler_name"/>
        <result property="schedulerDescription" column="scheduler_description"/>
        <result property="cronExpression" column="cron_expression"/>
        <result property="jobClassName" column="job_class_name"/>
        <result property="isEnabled" column="is_enabled"/>
        <result property="regDt" column="reg_dt"/>
        <result property="regUserId" column="reg_user_id"/>
        <result property="updDt" column="upd_dt"/>
        <result property="updUserId" column="upd_user_id"/>
    </resultMap>

    <resultMap id="schedulerConfigVOResultMap" type="egovframework.let.scheduler.domain.model.SchedulerConfigVO">
        <result property="schedulerId" column="scheduler_id"/>
        <result property="schedulerName" column="scheduler_name"/>
        <result property="schedulerDescription" column="scheduler_description"/>
        <result property="cronExpression" column="cron_expression"/>
        <result property="jobClassName" column="job_class_name"/>
        <result property="isEnabled" column="is_enabled"/>
        <result property="regDt" column="reg_dt"/>
        <result property="regUserId" column="reg_user_id"/>
        <result property="updDt" column="upd_dt"/>
        <result property="updUserId" column="upd_user_id"/>
    </resultMap>

    <!-- 스케쥴러 목록 조회 -->
    <select id="SchedulerConfigDAO.selectSchedulerList" resultMap="schedulerConfigVOResultMap"
            parameterType="egovframework.let.scheduler.domain.model.SchedulerConfigVO">
        SELECT
        scheduler_id,
        scheduler_name,
        scheduler_description,
        cron_expression,
        job_class_name,
        is_enabled,
        reg_dt,
        reg_user_id,
        upd_dt,
        upd_user_id
        FROM scheduler_config
        WHERE 1=1
        <if test="searchWrd != null and searchWrd != ''">
            AND (scheduler_name LIKE '%' + #{searchWrd} + '%'
            OR scheduler_description LIKE '%' + #{searchWrd} + '%')
        </if>
        <if test="isEnabled != null and isEnabled != ''">
            AND is_enabled = #{isEnabled}
        </if>
        ORDER BY scheduler_id DESC
        <if test="firstIndex != null and recordCountPerPage != null">
            OFFSET #{firstIndex} ROWS
            FETCH NEXT #{recordCountPerPage} ROWS ONLY
        </if>
    </select>

    <!-- 스케쥴러 총 개수 조회 -->
    <select id="SchedulerConfigDAO.selectSchedulerListCnt" resultType="int"
            parameterType="egovframework.let.scheduler.domain.model.SchedulerConfigVO">
        SELECT COUNT(*)
        FROM scheduler_config
        WHERE 1=1
        <if test="searchWrd != null and searchWrd != ''">
            AND (scheduler_name LIKE '%' + #{searchWrd} + '%'
            OR scheduler_description LIKE '%' + #{searchWrd} + '%')
        </if>
        <if test="isEnabled != null and isEnabled != ''">
            AND is_enabled = #{isEnabled}
        </if>
    </select>

    <!-- 스케쥴러 상세 조회 -->
    <select id="SchedulerConfigDAO.selectSchedulerDetail" resultMap="schedulerConfigResultMap" parameterType="long">
        SELECT
        scheduler_id,
        scheduler_name,
        scheduler_description,
        cron_expression,
        job_class_name,
        is_enabled,
        reg_dt,
        reg_user_id,
        upd_dt,
        upd_user_id
        FROM scheduler_config
        WHERE scheduler_id = #{schedulerId}
    </select>

    <!-- 스케쥴러 등록 -->
    <insert id="SchedulerConfigDAO.insertScheduler" parameterType="egovframework.let.scheduler.domain.model.SchedulerConfig">
        <selectKey keyProperty="schedulerId" resultType="long" order="AFTER">
            SELECT IDENT_CURRENT('scheduler_config')
        </selectKey>
        INSERT INTO scheduler_config (
        scheduler_name,
        scheduler_description,
        cron_expression,
        job_class_name,
        is_enabled,
        reg_dt,
        reg_user_id
        ) VALUES (
        #{schedulerName},
        #{schedulerDescription},
        #{cronExpression},
        #{jobClassName},
        #{isEnabled},
        GETDATE(),
        #{regUserId}
        )
    </insert>

    <!-- 스케쥴러 수정 -->
    <update id="SchedulerConfigDAO.updateScheduler" parameterType="egovframework.let.scheduler.domain.model.SchedulerConfig">
        UPDATE scheduler_config
        SET scheduler_name = #{schedulerName},
        scheduler_description = #{schedulerDescription},
        cron_expression = #{cronExpression},
        job_class_name = #{jobClassName},
        is_enabled = #{isEnabled},
        upd_dt = GETDATE(),
        upd_user_id = #{updUserId}
        WHERE scheduler_id = #{schedulerId}
    </update>

    <!-- 스케쥴러 삭제 -->
    <delete id="SchedulerConfigDAO.deleteScheduler" parameterType="long">
        DELETE FROM scheduler_config
        WHERE scheduler_id = #{schedulerId}
    </delete>

    <!-- 활성화된 스케쥴러 목록 조회 -->
    <select id="SchedulerConfigDAO.selectEnabledSchedulers" resultMap="schedulerConfigResultMap">
        SELECT
        scheduler_id,
        scheduler_name,
        scheduler_description,
        cron_expression,
        job_class_name,
        is_enabled,
        reg_dt,
        reg_user_id,
        upd_dt,
        upd_user_id
        FROM scheduler_config
        WHERE is_enabled = 'Y'
        ORDER BY scheduler_id
    </select>

</mapper>